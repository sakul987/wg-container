#!/bin/bash
set -e

[[ $UID != 0 ]] && exec sudo -E "$(readlink -f "$0")" "$@"

up() {
    if [ -n "$1" ]; then
        ip netns add vpn
        ip netns exec vpn ip addr add 127.0.0.1/8 dev lo
        ip netns exec vpn ip link set lo up
        ip link add vpndest0 type veth peer name vpnsource0
        ip link set vpndest0 up
        ip link set vpnsource0 netns vpn up
        ip addr add 10.200.200.1/24 dev vpndest0
        ip netns exec vpn ip addr add 10.200.200.2/24 dev vpnsource0
        ip netns exec vpn ip route add default via 10.200.200.1 dev vpnsource0
        iptables -t nat -A POSTROUTING -s 10.200.200.0/24 -o $interface -j MASQUERADE
        mkdir -p /etc/netns/vpn
        sh -c "echo 'nameserver 9.9.9.9' > /etc/netns/vpn/resolv.conf"
        ip netns exec vpn wg-quick up $1
        ufw route allow in on vpndest0 out on $interface
        ufw reload
    else
        echo "Enter wireguard config name"
    fi
}

down() {
    if [ -n "$1" ]; then
        ufw route delete allow in on vpndest0 out on $interface
        iptables -t nat -D POSTROUTING -s 10.200.200.0/24 -o $interface -j MASQUERADE
        ip netns exec vpn wg-quick down $1
        rm -r /etc/netns/vpn
        ip link delete vpndest0
        ip netns delete vpn
        ufw reload
    else
        echo "Enter wireguard config name"
    fi
}

execi() {
    exec ip netns exec vpn sudo -E -u \#${SUDO_UID:-$(id -u)} -g \#${SUDO_GID:-$(id -g)} -- "$@" &
    wait $!
}

direct() {
    server="$1"
    shift

    up "$server"

    set +e
    execi "$@"

    set -e
    down "$server"
}

showhelp() {
    echo "Commands:"
    echo "  wg-container up <flags> <configName>                 # Start VPN connection to <configName>"
    echo "  wg-container exec <flags> <command>                  # Execute <command> in the VPN namespace"
    echo "  wg-container down <flags> <configName>               # Stop VPN connection to <configName>"
    echo "  wg-container direct <flags> <configName> <command>   # Run <command> in <configName> without starting or stopping it"
    echo "  wg-container help                                    # Print this help text"
    echo "Flags:"
    echo "  -i <interface>  # Set the used network interface. Default is \"enp5s0\""
    echo "  -v              # Enable verbose mode / get more debug info"
    echo "  -h              # Print this help text"
    exit 0
}

command="$1"
shift

interface="enp5s0"

while getopts "i:vh" flag; do
  case $flag in
    i)  interface=$OPTARG ;;
    v)  set -x ;;
    h)  showhelp ;;
  esac
done

shift $((OPTIND-1))

case "$command" in
    up) up "$@" ;;
    down) down "$@" ;;
    exec) execi "$@" ;;
    direct) direct "$@" ;;
    help)   showhelp ;;
    *) echo "Usage: $0 up|down|exec|direct" >&2; exit 1 ;;
esac